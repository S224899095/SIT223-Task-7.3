# Stage 1: Build Angular frontend
FROM node:18 AS frontend-builder

WORKDIR /app

# Copy Angular project
COPY DatingApp.Client/ DatingApp.Client/

WORKDIR /app/DatingApp.Client

# Install dependencies and build Angular
RUN npm install
RUN npm install -g @angular/cli
RUN npm run build -- --configuration production

# Stage 2: Build .NET backend
FROM mcr.microsoft.com/dotnet/sdk:6.0 AS backend-builder

WORKDIR /app

# Copy backend source code
COPY DatingApp.Server/ DatingApp.Server/

# Copy SQLite database folder if needed
COPY DatingApp.Server/Data/ Data/

WORKDIR /app/DatingApp.Server

RUN dotnet restore
RUN dotnet publish -c Release -o /out

# Stage 3: Final runtime image
FROM mcr.microsoft.com/dotnet/aspnet:6.0

WORKDIR /app

# Set environment variables
ENV ASPNETCORE_ENVIRONMENT=Production
ENV ASPNETCORE_URLS=http://+:80
ENV DD_API_KEY=4edcc81c40014f8c590102d3ce35f5f6

# Expose port 80 for Azure
EXPOSE 80

# Create necessary folders (for SQLite DB)
RUN mkdir -p /app/Data/Database

# Copy backend output
COPY --from=backend-builder /out ./

# Copy frontend built files into wwwroot
COPY --from=frontend-builder /app/DatingApp.Client/dist/DatingApp.Client/browser ./wwwroot/

# Copy SQLite database folder (Data/Database/datingapp.db expected)
COPY --from=backend-builder /app/Data ./Data

# Start the application
ENTRYPOINT ["dotnet", "DatingApp.Server.dll"]
